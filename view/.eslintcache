[{"/home/joao/dev/authApp/view/src/index.js":"1","/home/joao/dev/authApp/view/src/context/token.js":"2","/home/joao/dev/authApp/view/src/App.js":"3","/home/joao/dev/authApp/view/src/pages/Login.js":"4","/home/joao/dev/authApp/view/src/pages/Home.js":"5","/home/joao/dev/authApp/view/src/components/InputField.js":"6","/home/joao/dev/authApp/view/src/pages/SignUp.js":"7","/home/joao/dev/authApp/view/src/functions/useDates.js":"8","/home/joao/dev/authApp/view/src/components/DateInput.js":"9","/home/joao/dev/authApp/view/src/components/ProfilePicture.js":"10","/home/joao/dev/authApp/view/src/components/TweetCard.js":"11","/home/joao/dev/authApp/view/src/components/Tweetar.js":"12","/home/joao/dev/authApp/view/src/hooks/useHideOnOutsideClick.js":"13","/home/joao/dev/authApp/view/src/components/MainSideBar.js":"14","/home/joao/dev/authApp/view/src/components/ToggleableSideBar.js":"15","/home/joao/dev/authApp/view/src/components/ShadedBox.js":"16"},{"size":407,"mtime":1608514899181,"results":"17","hashOfConfig":"18"},{"size":4396,"mtime":1611084855111,"results":"19","hashOfConfig":"18"},{"size":1799,"mtime":1611075534202,"results":"20","hashOfConfig":"18"},{"size":2489,"mtime":1611002700274,"results":"21","hashOfConfig":"18"},{"size":2189,"mtime":1610994580264,"results":"22","hashOfConfig":"18"},{"size":702,"mtime":1608580103045,"results":"23","hashOfConfig":"18"},{"size":9834,"mtime":1611002735462,"results":"24","hashOfConfig":"18"},{"size":1908,"mtime":1610719351033,"results":"25","hashOfConfig":"18"},{"size":1296,"mtime":1608764659118,"results":"26","hashOfConfig":"18"},{"size":442,"mtime":1610735932783,"results":"27","hashOfConfig":"18"},{"size":6023,"mtime":1610837312694,"results":"28","hashOfConfig":"18"},{"size":2449,"mtime":1610980159881,"results":"29","hashOfConfig":"18"},{"size":755,"mtime":1611002808280,"results":"30","hashOfConfig":"18"},{"size":7895,"mtime":1611000410257,"results":"31","hashOfConfig":"18"},{"size":7412,"mtime":1611085110907,"results":"32","hashOfConfig":"18"},{"size":402,"mtime":1610997285258,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1twbdm3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/joao/dev/authApp/view/src/index.js",[],["71","72"],"/home/joao/dev/authApp/view/src/context/token.js",["73"],"/home/joao/dev/authApp/view/src/App.js",["74","75","76"],"/home/joao/dev/authApp/view/src/pages/Login.js",[],"/home/joao/dev/authApp/view/src/pages/Home.js",["77"],"import { useContext, useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\";\n\nimport ProfilePicture from \"../components/ProfilePicture\"\nimport Tweetar from '../components/Tweetar'\nimport TweetCard from \"../components/TweetCard\"\n\nimport { Context } from '../context/token'\nimport '../styles/home.css'\n\nfunction Home({ setVisibleTgSideBar }) {\n    const {\n        API,\n        token,\n        user,\n        setUser,\n        isFetched,\n        setIsFetched\n    } = useContext(Context)\n    const [posts, setPosts] = useState([])\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        async function getData(url, setter) {\n            const response = await fetch(`${API}/${url}`, {\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': token\n                },\n            })\n\n            let data = await response.json()\n            if (url === 'post') {\n                data.sort((a, b) => new Date(b.date) - new Date(a.date))\n            }\n\n            if (response.ok)\n                setter(data)\n            else\n                setErrorMessage(data)\n        }\n\n        if (!isFetched) {\n            getData(`post`, setPosts)\n            getData(`user/profile`, setUser)\n            setIsFetched(true)\n        }\n\n    }, [API, token, isFetched])\n\n    const timeline = posts.map(post => (\n        <TweetCard\n            key={post['_id']}\n            post={post}\n            user={user}\n            setPosts={setPosts}\n        />\n    ))\n\n    return (\n        <div className='home'>\n            <Helmet>\n                <title>Página Inicial / Twitter</title>\n            </Helmet>\n            <div className='header'>\n                <div className='header__profilePicture'>\n                    <ProfilePicture url={user.photo} callback={() => setVisibleTgSideBar(true)} />\n                </div>\n                <h1 className='header__title'>Página Inicial</h1>\n            </div>\n            <Tweetar customClass={{ container: 'home' }} />\n            {timeline}\n            <p>{errorMessage}</p>\n\n        </div>\n\n    )\n}\n\n\nexport default Home","/home/joao/dev/authApp/view/src/components/InputField.js",[],"/home/joao/dev/authApp/view/src/pages/SignUp.js",[],"/home/joao/dev/authApp/view/src/functions/useDates.js",[],"/home/joao/dev/authApp/view/src/components/DateInput.js",[],"/home/joao/dev/authApp/view/src/components/ProfilePicture.js",[],"/home/joao/dev/authApp/view/src/components/TweetCard.js",["78"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Context } from '../context/token'\n\nimport ProfilePicture from './ProfilePicture'\n\nimport { getTimeDiff } from '../functions/useDates'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport {\n    faRetweet,\n    faHeart,\n    faEllipsisH,\n    faUserPlus,\n    faBan,\n    faVolumeMute,\n    faTrashAlt\n} from '@fortawesome/free-solid-svg-icons'\n\n\nimport '../styles/tweetCard.css'\nimport useHideOnOutsideClick from '../hooks/useHideOnOutsideClick'\n\nfunction TweetCard({ post, user, setPosts }) {\n    const { API, token } = useContext(Context)\n    const [author, setAuthor] = useState({\n        photo: ''\n    })\n    const {\n        ref: refOptions,\n        visible: visibleOptions,\n        setVisible: setVisibleOptions\n    } = useHideOnOutsideClick()\n\n    useEffect(() => {\n        async function getAuthor() {\n            const response = await fetch(`${API}/user/${post.user}`)\n            const data = await response.json()\n\n            if (response.ok)\n                setAuthor(data[0])\n        }\n\n        if (!author.name)\n            getAuthor()\n\n    }, [API, author.name, post.user])\n\n    function isFollowed() {\n        return user.following.some(followedUser => followedUser === author['_id'])\n    }\n\n    async function deleteTweet() {\n        const response = await fetch(`${API}/post/${post['_id']}`, {\n            method: 'DELETE',\n            headers: {\n                'auth-token': token\n            }\n        })\n        if (response.ok)\n            setPosts(prev =>\n                prev.filter(timelinePost => timelinePost['_id'] != post['_id'])\n            )\n    }\n\n    const timeDiff = getTimeDiff(post.date)\n\n    return (\n        <div className='wrapper' key={post['_id']}>\n            <div className='tweet'>\n                <div className='tweet__profilePicture'>\n                    <ProfilePicture url={author.photo} />\n                </div>\n                <div className='tweet__content'>\n                    <div className='tweet__header'>\n                        <h3 className='displayName'>{author['display_name']}</h3>\n                        <h4 className='username'>@{author.name}</h4>\n                        <p>· {timeDiff.label ? `${timeDiff.value} ${timeDiff.label}` : timeDiff}</p>\n                        <FontAwesomeIcon\n                            className='tweet__showOptions'\n                            icon={faEllipsisH}\n                            onClick={() => {\n                                setVisibleOptions(true)\n                                console.log(visibleOptions)\n                            }}\n                        />\n\n                    </div>\n                    <p className='tweet__post'>{post.post}</p>\n                    <div className='tweet__footer'>\n                        <div className='tweet__footer__item tweet__footer__item--reply'>\n                            <FontAwesomeIcon icon={faComment} />\n                            <p>{post.replies.length}</p>\n                        </div>\n                        <div className='tweet__footer__item tweet__footer__item--retweet'>\n                            <FontAwesomeIcon icon={faRetweet} />\n                            <p>{post.retweets.length}</p>\n                        </div>\n                        <div className='tweet__footer__item tweet__footer__item--heart'>\n                            <FontAwesomeIcon icon={farHeart} />\n                            <p>{post.favorites.length}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='tweet__options'\n                ref={refOptions}\n                style={{\n                    transform: `scaleY(${visibleOptions ? 1 : 0})`\n                }}\n            >\n                {author['_id'] !== user['_id'] ?\n                    <>\n                        {isFollowed() ?\n                            <button className='options__btn'>\n                                <FontAwesomeIcon\n                                    className='options__icon'\n                                    icon={faUserPlus}\n                                />  Deixar de seguir @{author.name}\n                            </button> :\n                            <button className='options__btn'>\n                                <FontAwesomeIcon\n                                    className='options__icon'\n                                    icon={faUserPlus}\n                                />  Seguir @{author.name}\n                            </button>\n                        }\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faUserPlus}\n                            />  Seguir @{author.name}\n                        </button>\n\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faVolumeMute}\n                            />  Silenciar @{author.name}\n                        </button>\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faBan}\n                            />  Bloquear @{author.name}\n                        </button>\n                    </> :\n                    <button onClick={deleteTweet} className='options__btn options__delete'>\n                        <FontAwesomeIcon\n                            className='options__icon options__delete'\n                            icon={faTrashAlt}\n                        />  Excluir\n                    </button>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default TweetCard","/home/joao/dev/authApp/view/src/components/Tweetar.js",[],"/home/joao/dev/authApp/view/src/hooks/useHideOnOutsideClick.js",["79"],"import { useEffect, useRef, useState } from \"react\"\n\nconst useHideOnOutsideClick = () => {\n    const ref = useRef(null)\n    const [visible, setVisible] = useState(false)\n\n    function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setVisible(false)\n\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true)\n        return () => {\n            document.addEventListener('click', handleClickOutside, true)\n            setVisible(false)\n            console.log(visible)\n        }\n    }, [ref])\n\n\n    return { ref, visible, setVisible }\n}\n\nexport default useHideOnOutsideClick","/home/joao/dev/authApp/view/src/components/MainSideBar.js",["80","81","82"],"import React, { useContext } from 'react'\nimport { useLocation } from \"react-router-dom\"\n\nimport { Context } from '../context/token'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faHome,\n    faBell,\n    faHashtag,\n    faEnvelope,\n    faUser,\n    faSearch,\n    faTimes,\n    faFeatherAlt,\n    faPlus,\n    faEllipsisH\n} from '@fortawesome/free-solid-svg-icons'\nimport {\n    faBell as farBell,\n    faEnvelope as farEnvelope,\n    faUser as farUser\n} from '@fortawesome/free-regular-svg-icons'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nimport '../styles/app.css'\nimport '../styles/hover.css'\nimport Tweetar from './Tweetar'\nimport ProfilePicture from './ProfilePicture'\nimport useHideOnOutsideClick from '../hooks/useHideOnOutsideClick'\nimport ShadedBox from './ShadedBox'\n\nconst navbarItens = [\n    {\n        icon: faTwitter,\n        label: '',\n        class: 'navbar__item--twitter',\n    },\n    {\n        icon: faHome,\n        label: 'Página Inicial',\n        path: '/'\n    },\n    {\n        icon: faHashtag,\n        label: 'Explorar',\n        class: 'navbar__item--hashtag'\n    },\n\n    {\n        icon: faSearch,\n        label: 'Pesquisar',\n        class: 'navbar__item--search'\n    },\n    {\n        icon: farBell,\n        label: 'Notificações'\n    },\n    {\n        icon: farEnvelope,\n        label: 'Mensagens'\n    },\n    {\n        icon: farUser,\n        label: 'Perfil',\n        class: 'navbar__item--profile'\n    }\n]\n\nfunction MainmainSideBar() {\n    const { token, user, logOff } = useContext(Context)\n    const location = useLocation()\n\n    const {\n        ref: refTweetar,\n        visible: visibleTweetar,\n        setVisible: setVisibleTweetar\n    } = useHideOnOutsideClick()\n\n    const {\n        ref: refProfileDetails,\n        visible: visibleProfileDetails,\n        setVisible: setVisibleProfileDetails\n    } = useHideOnOutsideClick()\n\n\n\n    return (\n        <>\n            {token &&\n                <div className='app__mainSideBar'>\n                    <nav className='navbar'>\n                        <ul className='navbar__list'>\n                            {navbarItens.map(item => (\n                                <li className={`navbar__item\n                                    ${item.class ? item.class : ''}\n                                    ${item.path === location.pathname ? 'selectedIcon' : ''}\n                                    `}\n                                    key={item.label}\n                                >\n                                    <div className={`navbar__item__icon`}>\n                                        <FontAwesomeIcon icon={item.icon} />\n                                    </div>\n                                    {item.label &&\n                                        <p className='navbar__item__label'>{item.label}</p>\n                                    }\n                                </li>\n                            ))}\n                            <li className='navlist__tweetarBtn--circular--mainSideBar'>\n                                <button\n                                    className='blueButton navlist__tweetarBtn--circular--mainSideBar navlist__tweetarBtn--circular'\n                                    onClick={() => setVisibleTweetar(true)}\n                                >\n                                    <div >\n                                        <FontAwesomeIcon\n                                            className='tweetarBtn__icon1'\n                                            icon={faFeatherAlt}\n                                        />\n                                        <FontAwesomeIcon\n                                            className='tweetarBtn__icon2'\n                                            icon={faPlus}\n                                        />\n                                    </div>\n                                </button>\n                            </li>\n                        </ul>\n                        <button\n                            className='blueButton navlist__tweetarBtn'\n                            onClick={() => setVisibleTweetar(true)}\n                        >\n                            Tweetar\n                        </button>\n                    </nav>\n\n                    <div className='mainSideBar__profileCard__wrapper' ref={refProfileDetails}>\n                        <div\n                            className='mainSideBar__profileCard--min mainSideBar__profileCard'\n                            onClick={() => setVisibleProfileDetails(prev => !prev)}\n                        >\n                            <div className='profileCard__photo'>\n                                <ProfilePicture url={user.photo} />\n                            </div>\n                            <div className='profileCard__id profileCard__id--mediaQuerry'>\n                                <h3 className='displayName'>{user['display_name']}</h3>\n                                <h4 className='username'>@{user.name}</h4>\n                            </div>\n                            <FontAwesomeIcon className='tweet__showOptions profileCard__id--mediaQuerry' icon={faEllipsisH} />\n                        </div>\n                        <div\n\n                            className='profileCard__details'\n                            style={{\n                                transform: `scale(${visibleProfileDetails ? '1' : '0'})`\n                            }}\n                        >\n                            <div className='mainSideBar__profileCard profileCard__details__header'>\n                                <div className='profileCard__photo'>\n                                    <ProfilePicture url={user.photo} />\n                                </div>\n                                <div className='profileCard__id'>\n                                    <h3 className='displayName'>{user['display_name']}</h3>\n                                    <h4 className='username'>@{user.name}</h4>\n                                </div>\n                            </div>\n                            <p onClick={logOff} className='profileCard__details__logOff'>\n                                Sair de @{user.name}\n                            </p>\n                        </div>\n\n                    </div>\n                </div>}\n\n            <ShadedBox condition={visibleTweetar}>\n                <div\n                    className='app__tweetar' ref={refTweetar}\n                    style={{ display: visibleTweetar ? 'unset' : 'none' }}\n                >\n                    <div className='app__tweetar__header'>\n                        <button\n                            className='app__tweetar__close'\n                            onClick={() => setVisibleTweetar(false)}\n                        >\n                            <FontAwesomeIcon icon={faTimes} />\n                        </button>\n                    </div>\n                    <div className='app__tweetar__main'>\n                        <Tweetar\n                            setVisible={setVisibleTweetar}\n                            customClass={{ input: 'app', button: 'app' }}\n                        />\n                    </div>\n                </div>\n            </ShadedBox>\n\n\n            <button\n                className='blueButton navlist__tweetarBtn--circular navlist__tweetarBtn--circular--absolute'\n                onClick={() => setVisibleTweetar(true)}\n            >\n                <div >\n                    <FontAwesomeIcon\n                        className='tweetarBtn__icon1'\n                        icon={faFeatherAlt}\n                    />\n                    <FontAwesomeIcon\n                        className='tweetarBtn__icon2'\n                        icon={faPlus}\n                    />\n                </div>\n            </button>\n        </>\n\n    )\n}\n\nexport default MainmainSideBar","/home/joao/dev/authApp/view/src/components/ToggleableSideBar.js",["83","84"],"/home/joao/dev/authApp/view/src/components/ShadedBox.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":24,"column":8,"nodeType":"91","endLine":24,"endColumn":28,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":29,"nodeType":"95","messageId":"96","endLine":1,"endColumn":37},{"ruleId":"93","severity":1,"message":"97","line":15,"column":20,"nodeType":"95","messageId":"96","endLine":15,"endColumn":36},{"ruleId":"93","severity":1,"message":"98","line":15,"column":38,"nodeType":"95","messageId":"96","endLine":15,"endColumn":51},{"ruleId":"89","severity":1,"message":"99","line":50,"column":8,"nodeType":"91","endLine":50,"endColumn":31,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":12,"column":5,"nodeType":"95","messageId":"96","endLine":12,"endColumn":12},{"ruleId":"89","severity":1,"message":"102","line":22,"column":8,"nodeType":"91","endLine":22,"endColumn":13,"suggestions":"103"},{"ruleId":"93","severity":1,"message":"104","line":9,"column":5,"nodeType":"95","messageId":"96","endLine":9,"endColumn":11},{"ruleId":"93","severity":1,"message":"105","line":11,"column":5,"nodeType":"95","messageId":"96","endLine":11,"endColumn":15},{"ruleId":"93","severity":1,"message":"106","line":12,"column":5,"nodeType":"95","messageId":"96","endLine":12,"endColumn":11},{"ruleId":"93","severity":1,"message":"94","line":3,"column":29,"nodeType":"95","messageId":"96","endLine":3,"endColumn":37},{"ruleId":"107","severity":1,"message":"108","line":136,"column":37,"nodeType":"109","endLine":136,"endColumn":90},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logIn', 'switchBgTheme', and 'switchColorTheme'. Either include them or remove the dependency array.","ArrayExpression",["112"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'switchColorTheme' is assigned a value but never used.","'switchBgTheme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setIsFetched' and 'setUser'. Either include them or remove the dependency array.",["113"],"'faHeart' is defined but never used.","React Hook useEffect has missing dependencies: 'handleClickOutside' and 'visible'. Either include them or remove the dependency array.",["114"],"'faBell' is defined but never used.","'faEnvelope' is defined but never used.","'faUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [token, themeLoaded, logIn, switchBgTheme, switchColorTheme]",{"range":"121","text":"122"},"Update the dependencies array to be: [API, token, isFetched, setUser, setIsFetched]",{"range":"123","text":"124"},"Update the dependencies array to be: [handleClickOutside, ref, visible]",{"range":"125","text":"126"},[828,848],"[token, themeLoaded, logIn, switchBgTheme, switchColorTheme]",[1365,1388],"[API, token, isFetched, setUser, setIsFetched]",[667,672],"[handleClickOutside, ref, visible]"]