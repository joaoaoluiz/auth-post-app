[{"/home/joao/dev/authApp/view/src/index.js":"1","/home/joao/dev/authApp/view/src/context/token.js":"2","/home/joao/dev/authApp/view/src/App.js":"3","/home/joao/dev/authApp/view/src/pages/Login.js":"4","/home/joao/dev/authApp/view/src/pages/Home.js":"5","/home/joao/dev/authApp/view/src/components/InputField.js":"6","/home/joao/dev/authApp/view/src/pages/SignUp.js":"7","/home/joao/dev/authApp/view/src/functions/useDates.js":"8","/home/joao/dev/authApp/view/src/components/DateInput.js":"9","/home/joao/dev/authApp/view/src/components/ProfilePicture.js":"10","/home/joao/dev/authApp/view/src/components/TweetCard.js":"11","/home/joao/dev/authApp/view/src/functions/getTimeDiff.js":"12","/home/joao/dev/authApp/view/src/components/Tweetar.js":"13"},{"size":407,"mtime":1608514899181,"results":"14","hashOfConfig":"15"},{"size":1448,"mtime":1610437540433,"results":"16","hashOfConfig":"15"},{"size":2720,"mtime":1610447924604,"results":"17","hashOfConfig":"15"},{"size":2413,"mtime":1609889048786,"results":"18","hashOfConfig":"15"},{"size":2158,"mtime":1610447656793,"results":"19","hashOfConfig":"15"},{"size":702,"mtime":1608580103045,"results":"20","hashOfConfig":"15"},{"size":13458,"mtime":1610290736292,"results":"21","hashOfConfig":"15"},{"size":933,"mtime":1608765002451,"results":"22","hashOfConfig":"15"},{"size":1296,"mtime":1608764659118,"results":"23","hashOfConfig":"15"},{"size":417,"mtime":1609716893606,"results":"24","hashOfConfig":"15"},{"size":6274,"mtime":1610433799128,"results":"25","hashOfConfig":"15"},{"size":926,"mtime":1610438405435,"results":"26","hashOfConfig":"15"},{"size":2062,"mtime":1610437586418,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1twbdm3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/joao/dev/authApp/view/src/index.js",[],["58","59"],"/home/joao/dev/authApp/view/src/context/token.js",["60"],"/home/joao/dev/authApp/view/src/App.js",["61","62","63"],"/home/joao/dev/authApp/view/src/pages/Login.js",[],"/home/joao/dev/authApp/view/src/pages/Home.js",["64"],"import { useContext, useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\";\n\nimport ProfilePicture from \"../components/ProfilePicture\"\nimport Tweetar from '../components/Tweetar'\nimport TweetCard from \"../components/TweetCard\"\n\nimport { Context } from '../context/token'\nimport '../styles/home.css'\n\nfunction Home() {\n    const {\n        API,\n        token,\n        logOff,\n        user,\n        setUser,\n        isFetched,\n        setIsFetched\n    } = useContext(Context)\n    const [posts, setPosts] = useState([])\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        async function getData(url, setter) {\n            const response = await fetch(url, {\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': token\n                },\n            })\n\n            const data = await response.json()\n            if (response.ok)\n                setter(data)\n            else\n                setErrorMessage(data)\n        }\n\n        if (!isFetched) {\n            getData(`${API}/post`, setPosts)\n            getData(`${API}/user/profile`, setUser)\n            setIsFetched(true)\n        }\n    }, [posts, API, token, isFetched])\n\n    const timeline = posts.map(post => (\n        <TweetCard\n            key={post['_id']}\n            post={post} user={user}\n            setPosts={setPosts}\n        />\n    ))\n\n    return (\n        <div className='home'>\n            <Helmet>\n                <title>Página Inicial / Twitter</title>\n            </Helmet>\n            <p onClick={logOff}>logOff</p>\n            <header className='home__header'>\n                <div className='header__wrapper'>\n                    <div className='header__profilePicture'>\n                        <ProfilePicture url={user.photo} />\n                    </div>\n                    <h1 className='header__title'>Página Inicial</h1>\n                </div>\n                <Tweetar />\n            </header>\n            {\n                timeline\n            }\n            <p>{errorMessage}</p>\n\n        </div>\n\n    )\n}\n\n\nexport default Home","/home/joao/dev/authApp/view/src/components/InputField.js",[],"/home/joao/dev/authApp/view/src/pages/SignUp.js",[],"/home/joao/dev/authApp/view/src/functions/useDates.js",[],"/home/joao/dev/authApp/view/src/components/DateInput.js",[],"/home/joao/dev/authApp/view/src/components/ProfilePicture.js",[],"/home/joao/dev/authApp/view/src/components/TweetCard.js",["65","66"],"import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { Context } from '../context/token'\n\nimport ProfilePicture from './ProfilePicture'\nimport getTimeDiff from '../functions/getTimeDiff'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport {\n    faRetweet,\n    faHeart,\n    faEllipsisH,\n    faUserPlus,\n    faBan,\n    faVolumeMute,\n    faTrashAlt\n} from '@fortawesome/free-solid-svg-icons'\n\nimport '../styles/tweetCard.css'\n\nfunction TweetCard({ post, user, setPosts }) {\n    const { API, token } = useContext(Context)\n    const [author, setAuthor] = useState({\n        photo: ''\n    })\n    const [showOptions, setShowOptions] = useState(false)\n    const optionsRef = useRef(null)\n\n    useEffect(() => {\n        async function getAuthor() {\n            const response = await fetch(`${API}/user/${post.user}`)\n            const data = await response.json()\n\n            if (response.ok)\n                setAuthor(data[0])\n        }\n\n        if (!author.name)\n            getAuthor()\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        };\n    }, [optionsRef, API, author.name, post.user])\n\n    function toggleOptions() {\n        setShowOptions(true)\n\n        document.addEventListener(\"mousedown\", handleClickOutside)\n    }\n\n    function handleClickOutside(event) {\n        if (optionsRef.current && !optionsRef.current.contains(event.target)) {\n            setShowOptions(false)\n\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    }\n\n    function isFollowed() {\n        return user.following.some(followedUser => followedUser === author['_id'])\n    }\n\n    async function deleteTweet() {\n        const response = await fetch(`${API}/post/${post['_id']}`, {\n            method: 'DELETE',\n            headers: {\n                'auth-token': token\n            }\n        })\n        if (response.ok)\n            setPosts(prev =>\n                prev.filter(timelinePost => timelinePost['_id'] != post['_id'])\n            )\n    }\n\n    const timeDiff = getTimeDiff(post.date)\n\n    return (\n        <div className='wrapper' key={post['_id']}>\n            <div className='tweet'>\n                <div className='tweet__profilePicture'>\n                    <ProfilePicture url={author.photo} />\n                </div>\n                <div className='tweet__content'>\n                    <div className='tweet__header'>\n                        <h3 className='tweet__displayName'>{author['display_name']}</h3>\n                        <h4 className='tweet__username'>@{author.name}</h4>\n                        <p>· {timeDiff.label ? `${timeDiff.value} ${timeDiff.label}` : timeDiff}</p>\n                        <FontAwesomeIcon\n                            className='tweet__showOptions'\n                            icon={faEllipsisH}\n                            onClick={toggleOptions}\n                        />\n\n                    </div>\n                    <p className='tweet__post'>{post.post}</p>\n                    <div className='tweet__footer'>\n                        <div className='tweet__footer__item tweet__footer__item--reply'>\n                            <FontAwesomeIcon icon={faComment} />\n                            <p>{post.replies.length}</p>\n                        </div>\n                        <div className='tweet__footer__item tweet__footer__item--retweet'>\n                            <FontAwesomeIcon icon={faRetweet} />\n                            <p>{post.retweets}</p>\n                        </div>\n                        <div className='tweet__footer__item tweet__footer__item--heart'>\n                            <FontAwesomeIcon icon={farHeart} />\n                            <p>{post.favorites}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='tweet__options'\n                ref={optionsRef}\n                style={{\n                    transform: `scaleY(${showOptions ? 1 : 0})`\n                }}\n            >\n                {author['_id'] !== user['_id'] ?\n                    <>\n                        {isFollowed() ?\n                            <button className='options__btn'>\n                                <FontAwesomeIcon\n                                    className='options__icon'\n                                    icon={faUserPlus}\n                                />  Deixar de seguir @{author.name}\n                            </button> :\n                            <button className='options__btn'>\n                                <FontAwesomeIcon\n                                    className='options__icon'\n                                    icon={faUserPlus}\n                                />  Seguir @{author.name}\n                            </button>\n                        }\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faUserPlus}\n                            />  Seguir @{author.name}\n                        </button>\n\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faVolumeMute}\n                            />  Silenciar @{author.name}\n                        </button>\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faBan}\n                            />  Bloquear @{author.name}\n                        </button>\n                    </> :\n                    <button onClick={deleteTweet} className='options__btn options__delete'>\n                        <FontAwesomeIcon\n                            className='options__icon options__delete'\n                            icon={faTrashAlt}\n                        />  Excluir\n                    </button>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default TweetCard","/home/joao/dev/authApp/view/src/functions/getTimeDiff.js",["67"],"import datetimeDifference from \"datetime-difference\"\n\nexport default (earlierDate, laterDate = Date.now()) => {\n    earlierDate = new Date(earlierDate)\n    laterDate = new Date(laterDate)\n    const timeDiff = datetimeDifference(earlierDate, laterDate)\n    const timeDiffStamp = Object.entries(timeDiff).find(timestamp => timestamp[1])\n\n    const parseStamp = {\n        'seconds': 's',\n        'minutes': 'min',\n        'hours': 'h',\n    }\n\n    if (timeDiffStamp[0].days > 7) {\n        const month = new Intl.DateTimeFormat('pt-BR', { month: 'short' }).format(earlierDate)\n        return `${earlierDate.getDay()} ${month} ${earlierDate.getYear()}`\n    }\n\n    return {\n        label: parseStamp[timeDiffStamp[0]] ? parseStamp[timeDiffStamp[0]] :\n            timeDiffStamp[1] != 1 ?\n                timeDiffStamp[0] :\n                timeDiffStamp[0].slice(0, timeDiffStamp[0].length - 1),\n        value: timeDiffStamp[1]\n    }\n}","/home/joao/dev/authApp/view/src/components/Tweetar.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":14,"column":8,"nodeType":"74","endLine":14,"endColumn":15,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":13,"column":5,"nodeType":"78","messageId":"79","endLine":13,"endColumn":11},{"ruleId":"76","severity":1,"message":"80","line":15,"column":5,"nodeType":"78","messageId":"79","endLine":15,"endColumn":15},{"ruleId":"76","severity":1,"message":"81","line":16,"column":5,"nodeType":"78","messageId":"79","endLine":16,"endColumn":11},{"ruleId":"72","severity":1,"message":"82","line":46,"column":8,"nodeType":"74","endLine":46,"endColumn":38,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":11,"column":5,"nodeType":"78","messageId":"79","endLine":11,"endColumn":12},{"ruleId":"72","severity":1,"message":"85","line":44,"column":8,"nodeType":"74","endLine":44,"endColumn":49,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":1,"nodeType":"89","endLine":27,"endColumn":2},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logIn'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-unused-vars","'faBell' is defined but never used.","Identifier","unusedVar","'faEnvelope' is defined but never used.","'faUser' is defined but never used.","React Hook useEffect has missing dependencies: 'setIsFetched' and 'setUser'. Either include them or remove the dependency array.",["93"],"'faHeart' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["94"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [logIn, token]",{"range":"101","text":"102"},"Update the dependencies array to be: [posts, API, token, isFetched, setUser, setIsFetched]",{"range":"103","text":"104"},"Update the dependencies array to be: [optionsRef, API, author.name, post.user, handleClickOutside]",{"range":"105","text":"106"},[429,436],"[logIn, token]",[1240,1270],"[posts, API, token, isFetched, setUser, setIsFetched]",[1229,1270],"[optionsRef, API, author.name, post.user, handleClickOutside]"]