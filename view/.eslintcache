[{"/home/joao/dev/authApp/view/src/index.js":"1","/home/joao/dev/authApp/view/src/context/token.js":"2","/home/joao/dev/authApp/view/src/App.js":"3","/home/joao/dev/authApp/view/src/pages/Login.js":"4","/home/joao/dev/authApp/view/src/pages/Home.js":"5","/home/joao/dev/authApp/view/src/components/InputField.js":"6","/home/joao/dev/authApp/view/src/pages/SignUp.js":"7","/home/joao/dev/authApp/view/src/functions/useDates.js":"8","/home/joao/dev/authApp/view/src/components/DateInput.js":"9","/home/joao/dev/authApp/view/src/components/ProfilePicture.js":"10","/home/joao/dev/authApp/view/src/components/TweetCard.js":"11","/home/joao/dev/authApp/view/src/components/Tweetar.js":"12","/home/joao/dev/authApp/view/src/hooks/useHideOnOutsideClick.js":"13","/home/joao/dev/authApp/view/src/components/MainSideBar.js":"14","/home/joao/dev/authApp/view/src/components/ToggleableSideBar.js":"15","/home/joao/dev/authApp/view/src/components/ShadedBox.js":"16"},{"size":407,"mtime":1608514899181,"results":"17","hashOfConfig":"18"},{"size":4396,"mtime":1611182612488,"results":"19","hashOfConfig":"18"},{"size":2083,"mtime":1611182226910,"results":"20","hashOfConfig":"18"},{"size":2489,"mtime":1611002700274,"results":"21","hashOfConfig":"18"},{"size":2189,"mtime":1610994580264,"results":"22","hashOfConfig":"18"},{"size":702,"mtime":1608580103045,"results":"23","hashOfConfig":"18"},{"size":9834,"mtime":1611002735462,"results":"24","hashOfConfig":"18"},{"size":1908,"mtime":1610719351033,"results":"25","hashOfConfig":"18"},{"size":1296,"mtime":1608764659118,"results":"26","hashOfConfig":"18"},{"size":442,"mtime":1610735932783,"results":"27","hashOfConfig":"18"},{"size":6023,"mtime":1610837312694,"results":"28","hashOfConfig":"18"},{"size":2449,"mtime":1610980159881,"results":"29","hashOfConfig":"18"},{"size":755,"mtime":1611002808280,"results":"30","hashOfConfig":"18"},{"size":7990,"mtime":1611245480694,"results":"31","hashOfConfig":"18"},{"size":7725,"mtime":1611246063895,"results":"32","hashOfConfig":"18"},{"size":402,"mtime":1610997285258,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1twbdm3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/joao/dev/authApp/view/src/index.js",[],["72","73"],"/home/joao/dev/authApp/view/src/context/token.js",["74"],"import React, { useState, useEffect } from 'react'\n\nconst Context = React.createContext()\n\nfunction ContextProvider({ children }) {\n    const [token, setToken] = useState(localStorage.getItem('token') || '')\n    const [user, setUser] = useState({ following: [], followers: [] })\n    const [isFetched, setIsFetched] = useState(false)\n    const [selectedTheme, setSelectedTheme] = useState(JSON.parse(localStorage.getItem('theme'))\n        || { color: 0, bg: 0 })\n    const [themeLoaded, setThemeLoaded] = useState(false)\n\n    console.log(localStorage.getItem('theme'), selectedTheme)\n\n    useEffect(() => {\n        if (token && !localStorage.getItem('token')) {\n            logIn()\n        }\n        if (!themeLoaded) {\n            switchBgTheme()\n            switchColorTheme()\n            setThemeLoaded(true)\n        }\n    }, [token, themeLoaded])\n\n    function logIn() {\n        localStorage.setItem('token', token)\n        setIsFetched(false)\n    }\n\n    function logOff() {\n        localStorage.removeItem('token')\n        setToken('')\n        setUser({ following: [], followers: [] })\n    }\n\n    const colorThemes = [\n        [203, 89, 53, 1],\n        [38, 100, 56, 1],\n        [341, 75, 51, 1],\n        [263, 51, 53, 1],\n        [17, 91, 55, 1],\n        [141, 73, 42, 1],\n    ]\n\n    const bgThemes = [\n        { primary: [0, 100, 100, 1], secondary: [257, 41, 97, 1], txt: '#000000', border: '#f5f3fa' },\n        { primary: [210, 34, 13, 1], txt: '#ffffff', border: '#38444d' },\n        { primary: [0, 0, 0, 1], txt: '#ffffff', border: '#2f3336' },\n    ]\n\n    function getHsla(values, modifier = 0, lighter = false) {\n        return `hsla(${values[0]}, ${values[1]}%, ${values[2] + (modifier < 0 || lighter ? modifier : 0)}%, ${modifier > 0 && !lighter ? `0.${modifier}` : values[3]})`\n    }\n\n    function switchColorTheme(option = selectedTheme.color) {\n        document.documentElement.style.setProperty('--main-color', getHsla(colorThemes[option]))\n        document.documentElement.style.setProperty('--light-main-color', getHsla(colorThemes[option], 22))\n        document.documentElement.style.setProperty('--dark-main-color', getHsla(colorThemes[option], -10))\n\n        setSelectedTheme(prev => ({ ...prev, color: option }))\n        localStorage.setItem('theme', JSON.stringify({ bg: selectedTheme.bg, color: option }))\n\n    }\n\n    function switchBgTheme(option = selectedTheme.bg) {\n        document.documentElement.style.setProperty('--bg-color', getHsla(bgThemes[option].primary))\n        document.documentElement.style.setProperty('--txt-color', bgThemes[option].txt)\n        document.documentElement.style.setProperty('--border-color', bgThemes[option].border)\n\n\n        if (bgThemes[option].secondary) {\n            document.documentElement.style.setProperty('--secondary-bg-color',\n                getHsla(bgThemes[option].secondary)\n            )\n            document.documentElement.style.setProperty('--logo', '#1da0f2')\n        }\n\n        else {\n            document.documentElement.style.setProperty('--secondary-bg-color',\n                getHsla(bgThemes[option].primary, 5, true)\n            )\n            document.documentElement.style.setProperty('--logo', '#ffffff')\n        }\n        localStorage.setItem('theme', JSON.stringify({ color: selectedTheme.color, bg: option }))\n\n        setSelectedTheme(prev => ({ ...prev, bg: option }))\n    }\n\n\n    const API = \"http://localhost:1234/api\"\n\n    const parseMessage = {\n        ['\"display_name\" is not allowed to be empty']: 'Name is required',\n        ['\"email\" is not allowed to be empty']: 'Email is required',\n        ['\"email\" must be a valid email']: 'Invalid email',\n        ['\"password\" is not allowed to be empty']: 'Password is required',\n        ['\"password\" length must be at least 8 characters long']: 'Password must be at least 8 characters long'// eslint-disable-line \n    }\n\n    return (\n        <Context.Provider value={({\n            token,\n            setToken,\n            API,\n            parseMessage,\n            logOff,\n            user,\n            setUser,\n            isFetched,\n            setIsFetched,\n            switchColorTheme,\n            switchBgTheme,\n            getHsla,\n            colorThemes,\n            bgThemes,\n            selectedTheme,\n            setSelectedTheme\n        })}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport { Context, ContextProvider }","/home/joao/dev/authApp/view/src/App.js",["75","76","77"],"import React, { useContext, useState } from 'react'\n\nimport { Switch, Route, Redirect, useLocation } from \"react-router-dom\"\n\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport Home from './pages/Home'\nimport MainSideBar from './components/MainSideBar'\n\nimport { Context } from './context/token'\nimport ToggleableSideBar from './components/ToggleableSideBar'\nimport useHideOnOutsideClick from './hooks/useHideOnOutsideClick'\n\nfunction App() {\n    const { token, switchColorTheme, switchBgTheme } = useContext(Context)\n    const location = useLocation()\n\n    const {\n        ref: refTgSideBar,\n        setVisible: setVisibleTgSideBar,\n        visible: visibleTgSideBar\n    } = useHideOnOutsideClick()\n\n    return (\n        <div className='app'>\n            {!token && <Redirect to=\"/login\" />}\n            {!location.pathname.match(/(\\/login|\\/sign-up)/) &&\n                <>\n                    <MainSideBar\n                        refTgSideBar={refTgSideBar}\n                        setVisibleTgSideBar={setVisibleTgSideBar}\n                        visibleTgSideBar={visibleTgSideBar}\n                    />\n                    <ToggleableSideBar\n                        refTgSideBar={refTgSideBar}\n                        setVisibleTgSideBar={setVisibleTgSideBar}\n                        visibleTgSideBar={visibleTgSideBar}\n                    />\n                </>\n            }\n            <div className='app__main'>\n                <Switch>\n\n                    <Route path='/login'>\n                        <Login />\n                    </Route>\n\n                    <Route path='/sign-up'>\n                        <SignUp />\n                    </Route>\n                    <Route path='/aa'>\n                    </Route>\n\n                    <Route exact path='/'>\n                        <Home setVisibleTgSideBar={setVisibleTgSideBar} />\n                    </Route>\n\n\n                </Switch>\n            </div>\n            <div className='app__trending' style={{ width: 400 }}>\n\n            </div>\n        </div >\n    )\n}\n\nexport default App","/home/joao/dev/authApp/view/src/pages/Login.js",[],"/home/joao/dev/authApp/view/src/pages/Home.js",["78"],"import { useContext, useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\";\n\nimport ProfilePicture from \"../components/ProfilePicture\"\nimport Tweetar from '../components/Tweetar'\nimport TweetCard from \"../components/TweetCard\"\n\nimport { Context } from '../context/token'\nimport '../styles/home.css'\n\nfunction Home({ setVisibleTgSideBar }) {\n    const {\n        API,\n        token,\n        user,\n        setUser,\n        isFetched,\n        setIsFetched\n    } = useContext(Context)\n    const [posts, setPosts] = useState([])\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        async function getData(url, setter) {\n            const response = await fetch(`${API}/${url}`, {\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': token\n                },\n            })\n\n            let data = await response.json()\n            if (url === 'post') {\n                data.sort((a, b) => new Date(b.date) - new Date(a.date))\n            }\n\n            if (response.ok)\n                setter(data)\n            else\n                setErrorMessage(data)\n        }\n\n        if (!isFetched) {\n            getData(`post`, setPosts)\n            getData(`user/profile`, setUser)\n            setIsFetched(true)\n        }\n\n    }, [API, token, isFetched])\n\n    const timeline = posts.map(post => (\n        <TweetCard\n            key={post['_id']}\n            post={post}\n            user={user}\n            setPosts={setPosts}\n        />\n    ))\n\n    return (\n        <div className='home'>\n            <Helmet>\n                <title>Página Inicial / Twitter</title>\n            </Helmet>\n            <div className='header'>\n                <div className='header__profilePicture'>\n                    <ProfilePicture url={user.photo} callback={() => setVisibleTgSideBar(true)} />\n                </div>\n                <h1 className='header__title'>Página Inicial</h1>\n            </div>\n            <Tweetar customClass={{ container: 'home' }} />\n            {timeline}\n            <p>{errorMessage}</p>\n\n        </div>\n\n    )\n}\n\n\nexport default Home","/home/joao/dev/authApp/view/src/components/InputField.js",[],"/home/joao/dev/authApp/view/src/pages/SignUp.js",[],"/home/joao/dev/authApp/view/src/functions/useDates.js",[],"/home/joao/dev/authApp/view/src/components/DateInput.js",[],"/home/joao/dev/authApp/view/src/components/ProfilePicture.js",[],"/home/joao/dev/authApp/view/src/components/TweetCard.js",["79"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Context } from '../context/token'\n\nimport ProfilePicture from './ProfilePicture'\n\nimport { getTimeDiff } from '../functions/useDates'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport {\n    faRetweet,\n    faHeart,\n    faEllipsisH,\n    faUserPlus,\n    faBan,\n    faVolumeMute,\n    faTrashAlt\n} from '@fortawesome/free-solid-svg-icons'\n\n\nimport '../styles/tweetCard.css'\nimport useHideOnOutsideClick from '../hooks/useHideOnOutsideClick'\n\nfunction TweetCard({ post, user, setPosts }) {\n    const { API, token } = useContext(Context)\n    const [author, setAuthor] = useState({\n        photo: ''\n    })\n    const {\n        ref: refOptions,\n        visible: visibleOptions,\n        setVisible: setVisibleOptions\n    } = useHideOnOutsideClick()\n\n    useEffect(() => {\n        async function getAuthor() {\n            const response = await fetch(`${API}/user/${post.user}`)\n            const data = await response.json()\n\n            if (response.ok)\n                setAuthor(data[0])\n        }\n\n        if (!author.name)\n            getAuthor()\n\n    }, [API, author.name, post.user])\n\n    function isFollowed() {\n        return user.following.some(followedUser => followedUser === author['_id'])\n    }\n\n    async function deleteTweet() {\n        const response = await fetch(`${API}/post/${post['_id']}`, {\n            method: 'DELETE',\n            headers: {\n                'auth-token': token\n            }\n        })\n        if (response.ok)\n            setPosts(prev =>\n                prev.filter(timelinePost => timelinePost['_id'] != post['_id'])\n            )\n    }\n\n    const timeDiff = getTimeDiff(post.date)\n\n    return (\n        <div className='wrapper' key={post['_id']}>\n            <div className='tweet'>\n                <div className='tweet__profilePicture'>\n                    <ProfilePicture url={author.photo} />\n                </div>\n                <div className='tweet__content'>\n                    <div className='tweet__header'>\n                        <h3 className='displayName'>{author['display_name']}</h3>\n                        <h4 className='username'>@{author.name}</h4>\n                        <p>· {timeDiff.label ? `${timeDiff.value} ${timeDiff.label}` : timeDiff}</p>\n                        <FontAwesomeIcon\n                            className='tweet__showOptions'\n                            icon={faEllipsisH}\n                            onClick={() => {\n                                setVisibleOptions(true)\n                                console.log(visibleOptions)\n                            }}\n                        />\n\n                    </div>\n                    <p className='tweet__post'>{post.post}</p>\n                    <div className='tweet__footer'>\n                        <div className='tweet__footer__item tweet__footer__item--reply'>\n                            <FontAwesomeIcon icon={faComment} />\n                            <p>{post.replies.length}</p>\n                        </div>\n                        <div className='tweet__footer__item tweet__footer__item--retweet'>\n                            <FontAwesomeIcon icon={faRetweet} />\n                            <p>{post.retweets.length}</p>\n                        </div>\n                        <div className='tweet__footer__item tweet__footer__item--heart'>\n                            <FontAwesomeIcon icon={farHeart} />\n                            <p>{post.favorites.length}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='tweet__options'\n                ref={refOptions}\n                style={{\n                    transform: `scaleY(${visibleOptions ? 1 : 0})`\n                }}\n            >\n                {author['_id'] !== user['_id'] ?\n                    <>\n                        {isFollowed() ?\n                            <button className='options__btn'>\n                                <FontAwesomeIcon\n                                    className='options__icon'\n                                    icon={faUserPlus}\n                                />  Deixar de seguir @{author.name}\n                            </button> :\n                            <button className='options__btn'>\n                                <FontAwesomeIcon\n                                    className='options__icon'\n                                    icon={faUserPlus}\n                                />  Seguir @{author.name}\n                            </button>\n                        }\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faUserPlus}\n                            />  Seguir @{author.name}\n                        </button>\n\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faVolumeMute}\n                            />  Silenciar @{author.name}\n                        </button>\n                        <button className='options__btn'>\n                            <FontAwesomeIcon\n                                className='options__icon'\n                                icon={faBan}\n                            />  Bloquear @{author.name}\n                        </button>\n                    </> :\n                    <button onClick={deleteTweet} className='options__btn options__delete'>\n                        <FontAwesomeIcon\n                            className='options__icon options__delete'\n                            icon={faTrashAlt}\n                        />  Excluir\n                    </button>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default TweetCard","/home/joao/dev/authApp/view/src/components/Tweetar.js",[],"/home/joao/dev/authApp/view/src/hooks/useHideOnOutsideClick.js",["80"],"import { useEffect, useRef, useState } from \"react\"\n\nconst useHideOnOutsideClick = () => {\n    const ref = useRef(null)\n    const [visible, setVisible] = useState(false)\n\n    function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setVisible(false)\n\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true)\n        return () => {\n            document.addEventListener('click', handleClickOutside, true)\n            setVisible(false)\n            console.log(visible)\n        }\n    }, [ref])\n\n\n    return { ref, visible, setVisible }\n}\n\nexport default useHideOnOutsideClick","/home/joao/dev/authApp/view/src/components/MainSideBar.js",["81","82","83","84"],"/home/joao/dev/authApp/view/src/components/ToggleableSideBar.js",["85","86"],"/home/joao/dev/authApp/view/src/components/ShadedBox.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":24,"column":8,"nodeType":"93","endLine":24,"endColumn":28,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":37},{"ruleId":"95","severity":1,"message":"99","line":15,"column":20,"nodeType":"97","messageId":"98","endLine":15,"endColumn":36},{"ruleId":"95","severity":1,"message":"100","line":15,"column":38,"nodeType":"97","messageId":"98","endLine":15,"endColumn":51},{"ruleId":"91","severity":1,"message":"101","line":50,"column":8,"nodeType":"93","endLine":50,"endColumn":31,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"103","line":12,"column":5,"nodeType":"97","messageId":"98","endLine":12,"endColumn":12},{"ruleId":"91","severity":1,"message":"104","line":22,"column":8,"nodeType":"93","endLine":22,"endColumn":13,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"106","line":9,"column":5,"nodeType":"97","messageId":"98","endLine":9,"endColumn":11},{"ruleId":"95","severity":1,"message":"107","line":11,"column":5,"nodeType":"97","messageId":"98","endLine":11,"endColumn":15},{"ruleId":"95","severity":1,"message":"108","line":12,"column":5,"nodeType":"97","messageId":"98","endLine":12,"endColumn":11},{"ruleId":"95","severity":1,"message":"109","line":36,"column":13,"nodeType":"97","messageId":"98","endLine":36,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":3,"column":29,"nodeType":"97","messageId":"98","endLine":3,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":142,"column":37,"nodeType":"112","endLine":142,"endColumn":90},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logIn', 'switchBgTheme', and 'switchColorTheme'. Either include them or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'switchColorTheme' is assigned a value but never used.","'switchBgTheme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setIsFetched' and 'setUser'. Either include them or remove the dependency array.",["116"],"'faHeart' is defined but never used.","React Hook useEffect has missing dependencies: 'handleClickOutside' and 'visible'. Either include them or remove the dependency array.",["117"],"'faBell' is defined but never used.","'faEnvelope' is defined but never used.","'faUser' is defined but never used.","'token' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [token, themeLoaded, logIn, switchBgTheme, switchColorTheme]",{"range":"124","text":"125"},"Update the dependencies array to be: [API, token, isFetched, setUser, setIsFetched]",{"range":"126","text":"127"},"Update the dependencies array to be: [handleClickOutside, ref, visible]",{"range":"128","text":"129"},[828,848],"[token, themeLoaded, logIn, switchBgTheme, switchColorTheme]",[1365,1388],"[API, token, isFetched, setUser, setIsFetched]",[667,672],"[handleClickOutside, ref, visible]"]