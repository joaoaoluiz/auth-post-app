[{"/home/joao/dev/authApp/view/src/index.js":"1","/home/joao/dev/authApp/view/src/context/token.js":"2","/home/joao/dev/authApp/view/src/App.js":"3","/home/joao/dev/authApp/view/src/pages/Login.js":"4","/home/joao/dev/authApp/view/src/pages/Home.js":"5","/home/joao/dev/authApp/view/src/components/InputField.js":"6","/home/joao/dev/authApp/view/src/pages/SignUp.js":"7","/home/joao/dev/authApp/view/src/functions/useDates.js":"8","/home/joao/dev/authApp/view/src/components/DateInput.js":"9","/home/joao/dev/authApp/view/src/components/ProfilePicture.js":"10","/home/joao/dev/authApp/view/src/components/TweetCard.js":"11","/home/joao/dev/authApp/view/src/components/Tweetar.js":"12","/home/joao/dev/authApp/view/src/hooks/useHideOnOutsideClick.js":"13","/home/joao/dev/authApp/view/src/components/MainSideBar.js":"14","/home/joao/dev/authApp/view/src/components/ToggleableSideBar.js":"15","/home/joao/dev/authApp/view/src/components/ShadedBox.js":"16","/home/joao/dev/authApp/view/src/functions/formatNumber.js":"17","/home/joao/dev/authApp/view/src/pages/Profile.js":"18"},{"size":407,"mtime":1611323926344,"results":"19","hashOfConfig":"20"},{"size":5552,"mtime":1611522308976,"results":"21","hashOfConfig":"20"},{"size":2290,"mtime":1611517226747,"results":"22","hashOfConfig":"20"},{"size":2489,"mtime":1611002700274,"results":"23","hashOfConfig":"20"},{"size":1573,"mtime":1611522315752,"results":"24","hashOfConfig":"20"},{"size":702,"mtime":1608580103045,"results":"25","hashOfConfig":"20"},{"size":9830,"mtime":1611265529175,"results":"26","hashOfConfig":"20"},{"size":2169,"mtime":1611342833156,"results":"27","hashOfConfig":"20"},{"size":1296,"mtime":1608764659118,"results":"28","hashOfConfig":"20"},{"size":442,"mtime":1610735932783,"results":"29","hashOfConfig":"20"},{"size":8373,"mtime":1611516572956,"results":"30","hashOfConfig":"20"},{"size":2449,"mtime":1610980159881,"results":"31","hashOfConfig":"20"},{"size":722,"mtime":1611518350884,"results":"32","hashOfConfig":"20"},{"size":8247,"mtime":1611518877331,"results":"33","hashOfConfig":"20"},{"size":8683,"mtime":1611522417294,"results":"34","hashOfConfig":"20"},{"size":402,"mtime":1610997285258,"results":"35","hashOfConfig":"20"},{"size":278,"mtime":1611267579800,"results":"36","hashOfConfig":"20"},{"size":7538,"mtime":1611522121830,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1twbdm3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/joao/dev/authApp/view/src/index.js",[],["78","79"],"/home/joao/dev/authApp/view/src/context/token.js",["80","81","82"],"/home/joao/dev/authApp/view/src/App.js",["83"],"import React, { useContext } from 'react'\n\nimport { Switch, Route, Redirect, useLocation, useParams } from \"react-router-dom\"\n\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport Home from './pages/Home'\nimport MainSideBar from './components/MainSideBar'\n\nimport { Context } from './context/token'\nimport ToggleableSideBar from './components/ToggleableSideBar'\nimport useHideOnOutsideClick from './hooks/useHideOnOutsideClick'\nimport Profile from './pages/Profile'\n\nfunction App() {\n    const { token } = useContext(Context)\n    const location = useLocation()\n\n    const {\n        ref: refTgSideBar,\n        setVisible: setVisibleTgSideBar,\n        visible: visibleTgSideBar\n    } = useHideOnOutsideClick()\n\n    return (\n        <div className='app'>\n            {!token && <Redirect to=\"/login\" />}\n            {!location.pathname.match(/(\\/login|\\/sign-up)/) &&\n                <>\n                    <MainSideBar\n                        refTgSideBar={refTgSideBar}\n                        setVisibleTgSideBar={setVisibleTgSideBar}\n                        visibleTgSideBar={visibleTgSideBar}\n                    />\n                    <ToggleableSideBar\n                        refTgSideBar={refTgSideBar}\n                        setVisibleTgSideBar={setVisibleTgSideBar}\n                        visibleTgSideBar={visibleTgSideBar}\n                    />\n                </>\n            }\n            <div className='app__main'>\n                <Switch>\n\n                    <Route path='/login'>\n                        <Login />\n                    </Route>\n\n                    <Route path='/sign-up'>\n                        <SignUp />\n                    </Route>\n                    <Route path='/aa'>\n                    </Route>\n\n                    <Route exact path='/'>\n                        <Home setVisibleTgSideBar={setVisibleTgSideBar} />\n                    </Route>\n\n                    <Route path='/profile/:name'>\n                        <Profile />\n                    </Route>\n                </Switch>\n            </div>\n            {!location.pathname.match(/(\\/login|\\/sign-up)/) &&\n                <div className='app__trending' style={{ width: 400 }}>\n\n                </div>\n            }\n\n        </div >\n    )\n}\n\nexport default App","/home/joao/dev/authApp/view/src/pages/Login.js",[],"/home/joao/dev/authApp/view/src/pages/Home.js",["84","85","86"],"/home/joao/dev/authApp/view/src/components/InputField.js",[],"/home/joao/dev/authApp/view/src/pages/SignUp.js",[],"/home/joao/dev/authApp/view/src/functions/useDates.js",[],"/home/joao/dev/authApp/view/src/components/DateInput.js",[],"/home/joao/dev/authApp/view/src/components/ProfilePicture.js",[],"/home/joao/dev/authApp/view/src/components/TweetCard.js",[],"/home/joao/dev/authApp/view/src/components/Tweetar.js",[],"/home/joao/dev/authApp/view/src/hooks/useHideOnOutsideClick.js",["87"],"import { useEffect, useRef, useState } from \"react\"\n\nconst useHideOnOutsideClick = () => {\n    const ref = useRef(null)\n    const [visible, setVisible] = useState(false)\n\n    function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setVisible(false)\n\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true)\n        return () => {\n            document.addEventListener('click', handleClickOutside, true)\n            setVisible(false)\n        }\n    }, [ref])\n\n\n    return { ref, visible, setVisible }\n}\n\nexport default useHideOnOutsideClick","/home/joao/dev/authApp/view/src/components/MainSideBar.js",["88","89","90"],"import React, { useContext } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\n\nimport { Context } from '../context/token'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faHome,\n    faBell,\n    faHashtag,\n    faEnvelope,\n    faUser,\n    faSearch,\n    faTimes,\n    faFeatherAlt,\n    faPlus,\n    faEllipsisH\n} from '@fortawesome/free-solid-svg-icons'\nimport {\n    faBell as farBell,\n    faEnvelope as farEnvelope,\n    faUser as farUser\n} from '@fortawesome/free-regular-svg-icons'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nimport '../styles/app.css'\nimport '../styles/hover.css'\nimport Tweetar from './Tweetar'\nimport ProfilePicture from './ProfilePicture'\nimport useHideOnOutsideClick from '../hooks/useHideOnOutsideClick'\nimport ShadedBox from './ShadedBox'\n\n\n\nfunction MainmainSideBar({ setVisibleTgSideBar }) {\n    const { token, user, logOff } = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n\n    const {\n        ref: refTweetar,\n        visible: visibleTweetar,\n        setVisible: setVisibleTweetar\n    } = useHideOnOutsideClick()\n\n    const {\n        ref: refProfileDetails,\n        visible: visibleProfileDetails,\n        setVisible: setVisibleProfileDetails\n    } = useHideOnOutsideClick()\n\n    const navbarItens = [\n        {\n            icon: faTwitter,\n            label: '',\n            class: 'navbar__item--twitter',\n        },\n        {\n            icon: faHome,\n            label: 'Página Inicial',\n            path: '/',\n            action: () => { history.push(`/`) }\n        },\n        {\n            icon: faHashtag,\n            label: 'Explorar',\n            class: 'navbar__item--hashtag'\n        },\n\n        {\n            icon: faSearch,\n            label: 'Pesquisar',\n            class: 'navbar__item--search'\n        },\n        {\n            icon: farBell,\n            label: 'Notificações'\n        },\n        {\n            icon: farEnvelope,\n            label: 'Mensagens'\n        },\n        {\n            icon: location.pathname === `/profile/${user.name}` ? faUser : farUser,\n            label: 'Perfil',\n            class: 'navbar__item--profile',\n            path: `/profile/${user.name}`,\n            action: () => { history.push(`/profile/${user.name}`) }\n        }, {\n            icon: faEllipsisH,\n            label: 'Mais',\n            class: 'navbar__item--more',\n            action: () => setVisibleTgSideBar(true)\n        },\n    ]\n\n    return (\n        <>\n            <div className='app__mainSideBar'>\n                <nav className='navbar'>\n                    <ul className='navbar__list'>\n                        {navbarItens.map(item => (\n                            <li className={`navbar__item\n                                    ${item.class ? item.class : ''}\n                                    ${item.path === location.pathname ? 'selectedIcon' : ''}\n                                    `}\n                                key={item.label}\n                                onClick={item.action}\n                            >\n                                <div className={`navbar__item__icon`}>\n                                    <FontAwesomeIcon icon={item.icon} />\n                                </div>\n                                {item.label &&\n                                    <p className='navbar__item__label'>{item.label}</p>\n                                }\n                            </li>\n                        ))}\n                        <li className='navlist__tweetarBtn--circular--mainSideBar'>\n                            <button\n                                className='blueButton navlist__tweetarBtn--circular--mainSideBar navlist__tweetarBtn--circular'\n                                onClick={() => setVisibleTweetar(true)}\n                            >\n                                <div >\n                                    <FontAwesomeIcon\n                                        className='tweetarBtn__icon1'\n                                        icon={faFeatherAlt}\n                                    />\n                                    <FontAwesomeIcon\n                                        className='tweetarBtn__icon2'\n                                        icon={faPlus}\n                                    />\n                                </div>\n                            </button>\n                        </li>\n                    </ul>\n                    <button\n                        className='blueButton navlist__tweetarBtn'\n                        onClick={() => setVisibleTweetar(true)}\n                    >\n                        Tweetar\n                        </button>\n                </nav>\n\n                <div className='mainSideBar__profileCard__wrapper' ref={refProfileDetails}>\n                    <div\n                        className='mainSideBar__profileCard--min mainSideBar__profileCard'\n                        onClick={() => setVisibleProfileDetails(prev => !prev)}\n                    >\n                        <div className='profileCard__photo'>\n                            <ProfilePicture url={user.photo} />\n                        </div>\n                        <div className='profileCard__id profileCard__id--mediaQuerry'>\n                            <h3 className='displayName'>{user['display_name']}</h3>\n                            <h4 className='username'>@{user.name}</h4>\n                        </div>\n                        <FontAwesomeIcon className='tweet__showOptions profileCard__id--mediaQuerry' icon={faEllipsisH} />\n                    </div>\n                    <div\n\n                        className='profileCard__details'\n                        style={{\n                            transform: `scale(${visibleProfileDetails ? '1' : '0'})`\n                        }}\n                    >\n                        <div className='mainSideBar__profileCard profileCard__details__header'>\n                            <div className='profileCard__photo'>\n                                <ProfilePicture url={user.photo} />\n                            </div>\n                            <div className='profileCard__id'>\n                                <h3 className='displayName'>{user['display_name']}</h3>\n                                <h4 className='username'>@{user.name}</h4>\n                            </div>\n                        </div>\n                        <p onClick={logOff} className='profileCard__details__logOff'>\n                            Sair de @{user.name}\n                        </p>\n                    </div>\n\n                </div>\n            </div>\n\n            <ShadedBox condition={visibleTweetar}>\n                <div\n                    className='app__tweetar' ref={refTweetar}\n                    style={{ display: visibleTweetar ? 'unset' : 'none' }}\n                >\n                    <div className='app__tweetar__header navHeader'>\n                        <button\n                            className='app__tweetar__close navHeader__icon'\n                            onClick={() => setVisibleTweetar(false)}\n                        >\n                            <FontAwesomeIcon icon={faTimes} />\n                        </button>\n                    </div>\n                    <div className='app__tweetar__main'>\n                        <Tweetar\n                            setVisible={setVisibleTweetar}\n                            customClass={{ input: 'app', button: 'app' }}\n                        />\n                    </div>\n                </div>\n            </ShadedBox>\n\n            <button\n                className='blueButton navlist__tweetarBtn--circular navlist__tweetarBtn--circular--absolute'\n                onClick={() => setVisibleTweetar(true)}\n            >\n                <div >\n                    <FontAwesomeIcon\n                        className='tweetarBtn__icon1'\n                        icon={faFeatherAlt}\n                    />\n                    <FontAwesomeIcon\n                        className='tweetarBtn__icon2'\n                        icon={faPlus}\n                    />\n                </div>\n            </button>\n\n        </>\n\n    )\n}\n\nexport default MainmainSideBar","/home/joao/dev/authApp/view/src/components/ToggleableSideBar.js",["91"],"/home/joao/dev/authApp/view/src/components/ShadedBox.js",[],"/home/joao/dev/authApp/view/src/functions/formatNumber.js",[],"/home/joao/dev/authApp/view/src/pages/Profile.js",["92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":13,"column":12,"nodeType":"101","messageId":"102","endLine":13,"endColumn":19},{"ruleId":"99","severity":1,"message":"103","line":13,"column":21,"nodeType":"101","messageId":"102","endLine":13,"endColumn":31},{"ruleId":"104","severity":1,"message":"105","line":58,"column":8,"nodeType":"106","endLine":58,"endColumn":28,"suggestions":"107"},{"ruleId":"99","severity":1,"message":"108","line":3,"column":48,"nodeType":"101","messageId":"102","endLine":3,"endColumn":57},{"ruleId":"99","severity":1,"message":"109","line":16,"column":9,"nodeType":"101","messageId":"102","endLine":16,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":23,"column":26,"nodeType":"101","messageId":"102","endLine":23,"endColumn":41},{"ruleId":"104","severity":1,"message":"111","line":32,"column":8,"nodeType":"106","endLine":32,"endColumn":31,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"113","line":21,"column":8,"nodeType":"106","endLine":21,"endColumn":13,"suggestions":"114"},{"ruleId":"99","severity":1,"message":"115","line":9,"column":5,"nodeType":"101","messageId":"102","endLine":9,"endColumn":11},{"ruleId":"99","severity":1,"message":"116","line":11,"column":5,"nodeType":"101","messageId":"102","endLine":11,"endColumn":15},{"ruleId":"99","severity":1,"message":"117","line":36,"column":13,"nodeType":"101","messageId":"102","endLine":36,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":158,"column":37,"nodeType":"120","endLine":158,"endColumn":90},{"ruleId":"99","severity":1,"message":"121","line":3,"column":40,"nodeType":"101","messageId":"102","endLine":3,"endColumn":46},{"ruleId":"104","severity":1,"message":"122","line":53,"column":8,"nodeType":"106","endLine":53,"endColumn":32,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":154,"column":33,"nodeType":"126","endLine":154,"endColumn":48},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logIn', 'switchBgTheme', and 'switchColorTheme'. Either include them or remove the dependency array.","ArrayExpression",["129"],"'useParams' is defined but never used.","'setUser' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchPosts', 'setIsFetched', and 'setPosts'. Either include them or remove the dependency array.",["130"],"React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["131"],"'faBell' is defined but never used.","'faEnvelope' is defined but never used.","'token' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'API'. Either include it or remove the dependency array.",["132"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [token, themeLoaded, logIn, switchBgTheme, switchColorTheme]",{"range":"141","text":"142"},"Update the dependencies array to be: [API, token, isFetched, fetchPosts, setPosts, setIsFetched]",{"range":"143","text":"144"},"Update the dependencies array to be: [handleClickOutside, ref]",{"range":"145","text":"146"},"Update the dependencies array to be: [whose, isFetched, name, API]",{"range":"147","text":"148"},[1802,1822],"[token, themeLoaded, logIn, switchBgTheme, switchColorTheme]",[749,772],"[API, token, isFetched, fetchPosts, setPosts, setIsFetched]",[634,639],"[handleClickOutside, ref]",[1625,1649],"[whose, isFetched, name, API]"]